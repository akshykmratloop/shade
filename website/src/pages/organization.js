import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Error.module.scss";
import HomePage from "@/components/home";
import createContent from "@/common/CreateContent";
import Loader from "@/common/Loader";
import { useEffect, useState } from "react";
import { backendAPI } from "@/contexts/GlobalContext";
import HsePage from "@/components/hse/Hse";
import OrganizationalChartPage from "@/components/organizational-chart/OrganizationalChart";

const inter = Inter({ subsets: ["latin"] });

export default function organization({ apiData }) {
  const [isLoading, setIsLoading] = useState(true);
  const [content, setContent] = useState(null);

  useEffect(() => {
    if (apiData && Object.keys(apiData).length > 0 && apiData.content) {
      const generatedContent = createContent(apiData.content);
      setContent(generatedContent.content);
      setIsLoading(false);
      console.log("content", generatedContent.content);
    } else {
      // keep loading forever or retry (optional)
      console.warn("API response is empty. Keeping loader active...");
    }
  }, [apiData]);

  // if (isLoading) {
  //   return <Loader />;
  // }

  return (
    <>
      <Head>
        <title>Shade</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <OrganizationalChartPage content={content} />
    </>
  );
}

export async function getServerSideProps() {
  try {
    const res = await fetch(`${backendAPI}organization`);

    if (!res.ok) {
      // If response failed (e.g., 404, 500), return empty object
      return { props: { apiData: {} } };
    }

    const apiData = await res.json();

    return { props: { apiData: apiData || {} } };
  } catch (error) {
    // If fetch throws an error (e.g., network failure), return empty object
    return { props: { apiData: {} } };
  }
}
