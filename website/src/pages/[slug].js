import createContent from "@/common/CreateContent";
import Loader from "@/common/Loader";
import NewTemplate from "@/components/template/NewTemplate";
import NewTemplate2 from "@/components/template/NewTemplate2";
import NewTemplate3 from "@/components/template/NewTemplate3";
import NewTemplate4 from "@/components/template/NewTemplate4";
import {backendAPI} from "@/contexts/GlobalContext";
import Head from "next/head";
import {useEffect, useState} from "react";

// export async function getStaticPaths() {
//     const paths = industry.map(detail => ({
//         params: { id: detail.id }
//     }));

//     return {
//         paths,
//         fallback: false // can also be true or 'blocking'
//     };
// }

// export async function getStaticProps({ params }) {
//     const detail = industry.find(p => p.id === params.id);

//     // If the project is not found, return a 404 page
//     if (!detail) {
//         return {
//             notFound: true,
//         };
//     }

//     return {
//         props: { detail },
//     };
// }

export default function Template({apiData}) {
  console.log("Safety Details API Data:", apiData);

  const [isLoading, setIsLoading] = useState(true);
  const [content, setContent] = useState(null);

  useEffect(() => {
    if (apiData && Object.keys(apiData).length > 0 && apiData.content) {
      const generatedContent = createContent(apiData.content);
      setContent(generatedContent.content);
      setIsLoading(false);
      console.log(
        "Content generated successfully:",
        JSON.stringify(generatedContent.content, null, 2)
      );
    } else {
      // keep loading forever or retry (optional)
      console.warn("API response is empty. Keeping loader active...");
    }
  }, [apiData]);

  if (isLoading) {
    return <Loader />;
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <NewTemplate content={content} /> */}
      {/* <NewTemplate2 content={content} /> */}
      {/* <NewTemplate3 content={content} /> */}
      <NewTemplate4 content={content} />
    </>
  );
}

// export async function getServerSideProps({params}) {
//   const {slug} = params;
//   console.log("Fetching data for slug:", slug);
//   console.log("helloooooooo");

//   try {
//     const res = await fetch(`${backendAPI}${slug}`);

//     if (!res.ok) {
//       // If response failed (e.g., 404, 500), return empty object
//       return {props: {apiData: {}}};
//     }
//     const apiData = await res.json();

//     console.log("API Data:", apiData);

//     return {props: {apiData: apiData || {}}};
//   } catch (error) {
//     // If fetch throws an error (e.g., network failure), return empty object
//     return {props: {apiData: {}}};
//   }
// }

export async function getServerSideProps({params}) {
  const {slug} = params;

  console.log("Simulating fetch for slug:", slug);

  // âœ… Replace this with your actual expected API structure
  const mockApiData = {
    slug: slug,
    title: `Mock Title for ${slug}`,
    content: {
      header: `Welcome to ${slug}`,
      description: `This is a mock description for the ${slug} service.`,
    },
  };

  return {
    props: {
      apiData: mockApiData,
    },
  };
}
