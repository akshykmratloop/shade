model UserRole {
    userId    String
    roleId    String
    user      User     @relation(fields: [userId], references: [id])
    role      Role     @relation(fields: [roleId], references: [id])
    createdAt DateTime @default(now())

    @@id([userId, roleId]) // primary key as combination of both id
    @@index([userId])
    @@index([roleId])
}

model UserAuditLog {
    auditLogId String   @unique
    userId     String
    user       User     @relation(fields: [userId], references: [id])
    auditLog   AuditLog @relation(fields: [auditLogId], references: [id])
    createdAt  DateTime @default(now())

    @@id([auditLogId, userId]) // primary key as combination of both id
    @@index([auditLogId])
    @@index([userId])
}

model RolePermission {
    roleId       String
    permissionId String
    role         Role       @relation(fields: [roleId], references: [id])
    permission   Permission @relation(fields: [permissionId], references: [id])
    createdAt    DateTime   @default(now())

    @@id([roleId, permissionId]) // primary key as combination of both id
    @@index([roleId])
    @@index([permissionId])
}

model PermissionSubPermission {
    permissionId    String
    subPermissionId String
    permission      Permission    @relation(fields: [permissionId], references: [id])
    subPermission   SubPermission @relation(fields: [subPermissionId], references: [id])
    createdAt       DateTime      @default(now())

    @@id([permissionId, subPermissionId]) // primary key as combination of both id
    @@index([permissionId])
    @@index([subPermissionId])
}

model ResourceManager {
    resourceId String   @unique
    userId     String
    resource   Resource @relation(fields: [resourceId], references: [id])
    user       User     @relation(fields: [userId], references: [id])
    createdAt  DateTime @default(now())

    @@id([resourceId, userId]) // primary key as combination of both id
    @@index([resourceId])
    @@index([userId])
}

model ResourceEditor {
    resourceId String   @unique
    userId     String
    resource   Resource @relation(fields: [resourceId], references: [id])
    user       User     @relation(fields: [userId], references: [id])
    createdAt  DateTime @default(now())

    @@id([resourceId, userId]) // primary key as combination of both id
    @@index([resourceId])
    @@index([userId])
}

model ResourceVerifier {
    resourceId String
    userId     String
    stage      Int
    resource   Resource @relation(fields: [resourceId], references: [id])
    user       User     @relation(fields: [userId], references: [id])
    createdAt  DateTime @default(now())

    @@id([resourceId, userId]) // primary key as combination of both id
    @@index([resourceId])
    @@index([userId])
}

model ResourcePublisher {
    resourceId String   @unique
    userId     String
    resource   Resource @relation(fields: [resourceId], references: [id])
    user       User     @relation(fields: [userId], references: [id])
    createdAt  DateTime @default(now())

    @@id([resourceId, userId]) // primary key as combination of both id
    @@index([resourceId])
    @@index([userId])
}
