services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
    container_name: backend-service
    env_file:
      - .env # Dynamically load the correct .env file
    ports:
      - "${BACKEND_PORT}:3000" # Expose for development only
    networks:
      - cms_network
    depends_on:
      - postgres
    volumes:
      - ./backend:/app # Mount the source code for live updates
      - backend-data:/app/data # Persist backend data
      - /app/node_modules # Avoid overwriting node_modules in the container
    environment:
      - CHOKIDAR_USEPOLLING=true # Enables file watching inside Docker

  # dashboard:
  #   build:
  #     context: ./dashboard
  #     dockerfile: Dockerfile
  #   container_name: dashboard-service
  #   env_file:
  #     - .env # Dynamically load the correct .env file
  #   ports:
  #     - "${DASHBOARD_PORT}:3001" # Expose for development only
  #   networks:
  #     - cms_network
  #   volumes:
  #     - ./dashboard:/app # Mount the source code for live updates
  #     - /app/node_modules # Avoid overwriting node_modules in the container
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true # Enables file watching inside Docker
  #     - FAST_REFRESH=true # Enables React fast refresh

  # website:
  #   build:
  #     context: ./website
  #     dockerfile: Dockerfile
  #   container_name: website-service
  #   env_file:
  #     - .env # Dynamically load the correct .env file
  #   ports:
      # - "${WEBSITE_PORT}:3002" # Expose for development only
  #   networks:
  #     - cms_network
  #   volumes:
  #     - ./website:/app # Mount the source code for live updates
  #     - /app/node_modules # Avoid overwriting node_modules in the container
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true # Enables file watching inside Docker
  #     - FAST_REFRESH=true # Enables React fast refresh

  postgres:
    image: postgres:latest
    container_name: postgres-service
    restart: always
    env_file:
      - .env # Dynamically load the correct .env file
    ports:
      - "${POSTGRES_PORT}:5432" # Expose for development only
    networks:
      - cms_network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data # Persist database data

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin
  #   networks:
  #     - cms_network
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_USER}
  #   ports:
  #     - "${PGADMIN_PORT}:80"
  #   depends_on:
  #     - postgres

networks:
  cms_network:
    driver: bridge

volumes:
  backend-data:
  postgres-data: