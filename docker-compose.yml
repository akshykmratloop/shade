services:
  postgres:
    image: postgres:latest
    container_name: shade-postgres
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - cms_network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_LISTEN_ADDRESS: 0.0.0.0
    volumes:
      - shade-postgres-data:/var/lib/postgresql/data  # ✅ updated

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
    container_name: backend-shade
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:3000"
    networks:
      - cms_network
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - shade-backend-data:/app/data               # ✅ updated
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true


# dashboard:
#   build:
#     context: ./dashboard
#     dockerfile: Dockerfile
#   container_name: dashboard-service
#   env_file:
#     - .env # Dynamically load the correct .env file
#   ports:
#     - "${DASHBOARD_PORT}:3001" # Expose for development only
#   networks:
#     - cms_network
#   volumes:
#     - ./dashboard:/app # Mount the source code for live updates
#     - /app/node_modules # Avoid overwriting node_modules in the container
#   environment:
#     - CHOKIDAR_USEPOLLING=true # Enables file watching inside Docker
#     - FAST_REFRESH=true # Enables React fast refresh

# website:
#   build:
#     context: ./website
#     dockerfile: Dockerfile
#   container_name: website-service
#   env_file:
#     - .env # Dynamically load the correct .env file
#   ports:
#     - "${WEBSITE_PORT}:3002" # Expose for development only
#   networks:
#     - cms_network
#   volumes:
#     - ./website:/app # Mount the source code for live updates
#     - /app/node_modules # Avoid overwriting node_modules in the container
#   environment:
#     - CHOKIDAR_USEPOLLING=true # Enables file watching inside Docker
#     - FAST_REFRESH=true # Enables React fast refresh

# pgadmin:
#   image: dpage/pgadmin4
#   container_name: pgadmin
#   networks:
#     - cms_network
#   environment:
#     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
#     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_USER}
#   ports:
#     - "${PGADMIN_PORT}:80"
#   depends_on:
#     - postgres

networks:
  cms_network:
    driver: bridge

volumes:
  shade-postgres-data:
  shade-backend-data:
